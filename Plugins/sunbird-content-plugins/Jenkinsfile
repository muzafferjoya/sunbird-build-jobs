pipeline {
    agent any

    parameters {
        string(name: 'github_release_tag', defaultValue: 'release-5.2.1_RC4', description: 'Specify the GitHub release tag to build from.')
    }

    stages {
        stage('Checkout') {
            steps {
                cleanWs()

                dir('content-plugins') {
                    checkout scm: [$class: 'GitSCM', userRemoteConfigs: [[url: 'https://github.com/Sunbird-Knowlg/sunbird-content-plugins.git']], branches: [[name: 'refs/tags/release-5.2.1_RC4']]], poll: false
                    script {
                        def commit_hash = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                        def artifact_version = params.github_release_tag.split('/')[-1] + "_" + commit_hash + "_" + env.BUILD_NUMBER
                        echo "artifact_version: ${artifact_version}"
                    }
                }
            }
        }
        stage('Build') {
            steps {
                sh "zip -r content-plugins.zip content-plugins"
            }
        }

        stage('ArchiveArtifacts') {
            steps {
                script {
                    sh """
                        mkdir content-plugins-artifacts
                        cp content-plugins.zip content-plugins-artifacts
                        zip -j content-plugins-artifacts.zip:${artifact_version} content-plugins-artifacts/*
                    """
                    archiveArtifacts "content-plugins-artifacts.zip:${artifact_version}"
                    sh "echo {\\\"artifact_name\\\" : \\\"content-plugins-artifacts.zip\\\", \\\"artifact_version\\\" : \\\"${artifact_version}\\\", \\\"node_name\\\" : \\\"${env.NODE_NAME}\\\"} > metadata.json"
                    archiveArtifacts artifacts: 'metadata.json', onlyIfSuccessful: true
                    currentBuild.description = "${artifact_version}"
                }
            }
        }
    }
}

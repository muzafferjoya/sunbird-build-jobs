pipeline {
    agent any

    environment {
        hub_org = 'muzafferjoya/taxonomy-service'
        registryCredential = 'muzaffar-docker-hub'
        dockerImage = ''
        releaseTag = "release-5.2.0_RC3"
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    if (!env.hub_org) {
                        error 'Uh Oh! Please set a Jenkins environment variable named hub_org with value as muzafferjoya/taxonomy-service'
                    } else {
                        echo "Found environment variable named hub_org with value as: ${env.hub_org}"
                    }
                }
            }
        }

        stage('Initialize') {
            steps {
                script {
                    def mavenHome = tool 'maven'
                    env.PATH = "${mavenHome}/bin:${env.PATH}"
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    //cleanWs()
                    checkout scm: [$class: 'GitSCM', userRemoteConfigs: [[url: 'https://github.com/project-sunbird/knowledge-platform.git']], branches: [[name: 'refs/tags/release-5.2.0_RC3']]], poll: false

                    // Check if params.github_release_tag is null
                    def githubReleaseTag = params.github_release_tag ?: 'defaultTag'

                    def commit_hash = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                    def build_tag = sh(script: "echo ${githubReleaseTag.split('/')[-1]}_${commit_hash}_${env.BUILD_NUMBER}", returnStdout: true).trim()
                    echo "build_tag: ${build_tag}"

                    env.NODE_ENV = 'build'
                    echo "Environment will be: ${env.NODE_ENV}"

                    sh 'mvn clean install -DskipTests=true -DCLOUD_STORE_GROUP_ID=org.sunbird -DCLOUD_STORE_ARTIFACT_ID=cloud-store-sdk_2.12 -DCLOUD_STORE_VERSION=1.4.6'
                }
            }
        }

        stage('Package') {
            steps {
                script {
                    dir('taxonomy-api') {
                        sh 'mvn play2:dist -pl taxonomy-service'
                    }
                    
                    sh 'docker build -f build/taxonomy-service/Dockerfile -t ${hub_org}:${releaseTag} .'
                    sh 'docker push ${hub_org}:${releaseTag}'
                }
            }
        }

        // stage('ArchiveArtifacts') {
        //     steps {
        //         script {
        //             archiveArtifacts 'metadata.json'
        //             currentBuild.description = "${build_tag}"
        //         }
        //     }
        // }
    }

    // post {
    //     failure {
    //         script {
    //             error 'Build failed!'
    //         }
    //     }
    // }
}